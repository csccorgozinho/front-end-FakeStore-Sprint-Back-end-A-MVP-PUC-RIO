# Stage 1: Build the React application (Node 20 Debian para compatibilidade)
FROM node:20 as builder

# Instala dependências do sistema (para build no Debian, incluindo esbuild/Rollup nativos)
RUN apt-get update && apt-get install -y python3 make g++ && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copia package.json e package-lock.json PRIMEIRO (para cache otimizado e install limpo)
COPY package.json package-lock.json ./

# Instala dependências (TUDO, incluindo devDeps para Vite/esbuild/Rollup - usa ci para lockfile e plataforma Linux)
RUN npm ci --no-audit

# Fix explícito para o bug do NPM com Rollup nativo: Instala o binário para Linux x64 (resolve "Cannot find module")
RUN npm install --no-save @rollup/rollup-linux-x64-gnu

# Copia o resto do código fonte (SEM node_modules do host, graças ao .dockerignore)
COPY . .

# Limpa cache e build (agora com Rollup nativo disponível)
RUN npm cache clean --force
RUN npm run build

# Stage 2: Serve com Nginx (leve, sem Node.js ou devDeps)
FROM nginx:stable-alpine

# Copia os arquivos de build do stage anterior (só /dist otimizado)
COPY --from=builder /app/dist /usr/share/nginx/html

# Copia config Nginx para SPAs (sobrescreve o default — SEM rm agora!)
COPY nginx.conf /etc/nginx/conf.d/default.conf

# NÃO remove mais o default.conf — deixa a config copiada ativa

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]